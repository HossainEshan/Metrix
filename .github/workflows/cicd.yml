# .github/workflows/cicd.yml

name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop # Add other branches you want to test
  pull_request:
    branches:
      - main

jobs:
  ci:
    name: Pytest
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12" # Specify your project's Python version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run tests
      - name: Run tests
        run: python -m pytest -W error

  cd:
    name: Deploy to Droplet
    if: github.ref == 'refs/heads/main' # Only deploy when pushing to the main branch
    runs-on: ubuntu-latest
    needs: ci # Ensure this job runs only if CI passes

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Deploy to Droplet
      - name: Deploy to Droplet
        env:
          DROPLET_IP: ${{ secrets.DROPLET_IP }}
          SSH_PRIVATE_KEY: ${{ secrets.DROPLET_SSH_PRIVATE_KEY }}
        run: |
          # Add the SSH private key to the SSH agent
          echo "${SSH_PRIVATE_KEY}" > private_key
          chmod 600 private_key
          eval "$(ssh-agent -s)"
          ssh-add private_key

          # SSH into the droplet and perform deployment tasks
          ssh -o StrictHostKeyChecking=no -i private_key ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_IP }} << EOF
            cd /home/eshan/Metrix  # Change to your project directory
            git pull origin main   # Pull the latest code
            sudo supervisorctl restart metrix  # Restart Supervisor program
          EOF
